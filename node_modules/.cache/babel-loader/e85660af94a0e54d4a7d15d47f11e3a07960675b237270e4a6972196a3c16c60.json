{"ast":null,"code":"import { computed, onMounted, toRefs } from \"vue\";\nexport default {\n  props: {\n    chat: Object\n  },\n  setup(props) {\n    console.log('question', props.chat);\n    let {\n      question,\n      answer\n    } = toRefs(props.chat);\n    console.log('question', question.value, answer.value);\n    let loadInterval;\n    const isBot = computed(() => _.isEmpty(answer));\n    onMounted(() => {\n      setAnswer();\n    });\n    const setAnswer = () => {\n      console.log('타니');\n      let bot_text = document.getElementById('bot');\n      loadInterval = setInterval(() => {\n        bot_text.innerHTML += '.';\n        if (bot_text.textContent === '....') {\n          bot_text.innerHTML = '';\n        }\n      }, 300);\n    };\n    return {\n      isBot,\n      setAnswer,\n      loadInterval\n    };\n  }\n};","map":{"version":3,"mappings":"AAsBA,SAASA,QAAQ,EAACC,SAAS,EAACC,MAAK,QAAS,KAAK;AAC/C,eAAe;EACbC,KAAK,EAAE;IACLC,IAAI,EAACC;EACP,CAAC;EACDC,KAAK,CAACH,KAAK,EAAE;IACXI,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEL,KAAK,CAACC,IAAI;IAClC,IAAI;MAAEK,QAAQ;MAAEC;IAAO,IAAIR,MAAM,CAACC,KAAK,CAACC,IAAI,CAAC;IAC5CG,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEC,QAAQ,CAACE,KAAK,EAACD,MAAM,CAACC,KAAK;IAEpD,IAAIC,YAAY;IAChB,MAAMC,KAAI,GAAIb,QAAQ,CAAC,MAAMc,CAAC,CAACC,OAAO,CAACL,MAAM,CAAC,CAAC;IAC/CT,SAAS,CAAC,MAAM;MACde,SAAS,EAAE;IAEb,CAAC;IAED,MAAMA,SAAQ,GAAI,MAAM;MACtBT,OAAO,CAACC,GAAG,CAAC,IAAI;MAChB,IAAIS,QAAO,GAAIC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;MAC7CP,YAAW,GAAIQ,WAAW,CAAC,MAAM;QAC/BH,QAAQ,CAACI,SAAQ,IAAK,GAAG;QACzB,IAAIJ,QAAQ,CAACK,WAAU,KAAM,MAAM,EAAE;UACnCL,QAAQ,CAACI,SAAQ,GAAI,EAAE;QACzB;MACF,CAAC,EAAE,GAAG,CAAC;IAET;IAEA,OAAO;MAACR,KAAK;MAACG,SAAS;MAACJ;IAAY;EAEtC;AAEF","names":["computed","onMounted","toRefs","props","chat","Object","setup","console","log","question","answer","value","loadInterval","isBot","_","isEmpty","setAnswer","bot_text","document","getElementById","setInterval","innerHTML","textContent"],"sourceRoot":"","sources":["C:\\Users\\DESKTOP\\study\\tech-bot\\client\\src\\components\\ChatContent.vue"],"sourcesContent":["<template>\r\n  <div class=\"grow\">\r\n      <div class=\"flex w-full text-white px-2 py-3 h-max\">\r\n        <div class=\"shrink-0 px-2\">\r\n          <img src=\"../assets/image/profile.png\" class=\"w-12\" id=\"user\"/>\r\n        </div>\r\n        <div class=\"grow-1 break-all bg-gray-700 font-medium p-2\">\r\n          {{chat.question }}\r\n        </div>\r\n      </div>\r\n      <div class=\"flex w-full h-auto text-white px-2 py-3 h-max\">\r\n        <div class=\"grow-1 break-all bg-sky-600 font-medium p-2 w-5/6\" id=\"bot\">\r\n        \r\n        </div>\r\n         <div class=\"shrink-0 px-2\">\r\n          <img src=\"../assets/image/robot.png\" class=\"w-12\" />\r\n        </div>\r\n      </div>\r\n     </div> \r\n</template>\r\n\r\n<script>\r\nimport { computed,onMounted,toRefs } from \"vue\";\r\nexport default {\r\n  props: {\r\n    chat:Object\r\n  },\r\n  setup(props) {\r\n    console.log('question', props.chat)\r\n    let { question, answer } = toRefs(props.chat);\r\n     console.log('question', question.value,answer.value)\r\n    \r\n    let loadInterval;\r\n    const isBot = computed(() => _.isEmpty(answer));\r\n    onMounted(() => {\r\n      setAnswer();\r\n\r\n    })\r\n    \r\n    const setAnswer = () => {\r\n      console.log('타니')\r\n      let bot_text = document.getElementById('bot');\r\n      loadInterval = setInterval(() => {\r\n        bot_text.innerHTML += '.';\r\n        if (bot_text.textContent === '....') {\r\n          bot_text.innerHTML = '';\r\n        }\r\n      }, 300);\r\n      \r\n    }\r\n\r\n    return {isBot,setAnswer,loadInterval}\r\n\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}