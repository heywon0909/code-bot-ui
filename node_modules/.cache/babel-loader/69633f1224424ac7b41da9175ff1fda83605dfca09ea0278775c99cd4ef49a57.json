{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nimport axios from 'axios';\nexport default createStore({\n  state: {\n    chatText: [],\n    botText: []\n  },\n  getters: {\n    getChatContent(state) {\n      return state.chatText;\n    }\n  },\n  mutations: {\n    setUserText(state, payload) {\n      state.chatText.push(payload);\n    },\n    setBotText(state, payload) {\n      state.chatText[state.chatText.length - 1] = payload;\n    }\n  },\n  actions: {\n    getResponse: async (context, payload) => {\n      let {\n        id,\n        question\n      } = payload;\n      console.log('id', id);\n      try {\n        let url = 'http://localhost:5000/';\n        let {\n          data,\n          statusText\n        } = await axios.post(url, {\n          prompt: question\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (statusText === 'OK') {\n          console.log('result', data);\n        }\n\n        // context.commit('setCha')\n      } catch (error) {\n        console.warn(error);\n      }\n    }\n  }\n});","map":{"version":3,"names":["createStore","axios","state","chatText","botText","getters","getChatContent","mutations","setUserText","payload","push","setBotText","length","actions","getResponse","context","id","question","console","log","url","data","statusText","post","prompt","headers","error","warn"],"sources":["C:/Users/DESKTOP/study/tech-bot/client/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\r\nimport axios from 'axios';\r\nexport default createStore({\r\n    state: {\r\n        chatText: [],\r\n        botText:[]\r\n    },\r\n    getters: {\r\n        getChatContent(state) {\r\n            return state.chatText;\r\n        }\r\n    },\r\n    mutations: {\r\n        setUserText(state, payload) {\r\n            state.chatText.push(payload);\r\n        },\r\n        setBotText(state, payload) {\r\n            state.chatText[state.chatText.length-1] = payload;\r\n        }\r\n    },\r\n    actions: {\r\n        getResponse: async(context, payload) => {\r\n            let { id, question } = payload;\r\n            console.log('id',id)\r\n            try {\r\n                let url = 'http://localhost:5000/'\r\n                let {data,statusText} = await axios.post(url, { prompt: question }, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                });\r\n               \r\n                if (statusText === 'OK') {\r\n                    console.log('result',data)\r\n                }\r\n                \r\n                // context.commit('setCha')\r\n            } catch (error) {\r\n                console.warn(error);\r\n            }\r\n            \r\n        }\r\n\r\n    }\r\n})"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,eAAeD,WAAW,CAAC;EACvBE,KAAK,EAAE;IACHC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAC;EACZ,CAAC;EACDC,OAAO,EAAE;IACLC,cAAc,CAACJ,KAAK,EAAE;MAClB,OAAOA,KAAK,CAACC,QAAQ;IACzB;EACJ,CAAC;EACDI,SAAS,EAAE;IACPC,WAAW,CAACN,KAAK,EAAEO,OAAO,EAAE;MACxBP,KAAK,CAACC,QAAQ,CAACO,IAAI,CAACD,OAAO,CAAC;IAChC,CAAC;IACDE,UAAU,CAACT,KAAK,EAAEO,OAAO,EAAE;MACvBP,KAAK,CAACC,QAAQ,CAACD,KAAK,CAACC,QAAQ,CAACS,MAAM,GAAC,CAAC,CAAC,GAAGH,OAAO;IACrD;EACJ,CAAC;EACDI,OAAO,EAAE;IACLC,WAAW,EAAE,OAAMC,OAAO,EAAEN,OAAO,KAAK;MACpC,IAAI;QAAEO,EAAE;QAAEC;MAAS,CAAC,GAAGR,OAAO;MAC9BS,OAAO,CAACC,GAAG,CAAC,IAAI,EAACH,EAAE,CAAC;MACpB,IAAI;QACA,IAAII,GAAG,GAAG,wBAAwB;QAClC,IAAI;UAACC,IAAI;UAACC;QAAU,CAAC,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAACH,GAAG,EAAE;UAAEI,MAAM,EAAEP;QAAS,CAAC,EAAE;UAChEQ,OAAO,EAAE;YACL,cAAc,EAAE;UACpB;QACJ,CAAC,CAAC;QAEF,IAAIH,UAAU,KAAK,IAAI,EAAE;UACrBJ,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACE,IAAI,CAAC;QAC9B;;QAEA;MACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;QACZR,OAAO,CAACS,IAAI,CAACD,KAAK,CAAC;MACvB;IAEJ;EAEJ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}