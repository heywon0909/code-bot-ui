{"ast":null,"code":"import { computed, onMounted, toRefs } from \"vue\";\nimport { useStore } from \"vuex\";\nexport default {\n  setup(props) {\n    let {\n      question,\n      answer\n    } = toRefs(props);\n    console.log('question', question, answer);\n    const store = useStore();\n    let loadInterval;\n    const chatContent = computed(() => store.getters.getChatContent);\n    onMounted(() => setAnswer);\n    const setAnswer = () => {\n      console.log('타니');\n      let bot_text = document.getElementById('bot');\n      loadInterval = setInterval(() => {\n        console.log('타니');\n        bot_text.innerHTML += '.';\n        if (bot_text.textContent === '...') {\n          bot_text.innerHTML = '';\n        }\n      }, 300);\n    };\n    const bot = computed(() => {\n      return this.chat;\n    });\n    return {\n      chatContent,\n      bot,\n      setAnswer,\n      loadInterval\n    };\n  }\n};","map":{"version":3,"mappings":"AAsBA,SAASA,QAAQ,EAAEC,SAAS,EAACC,MAAK,QAAS,KAAK;AAChD,SAASC,QAAO,QAAS,MAAM;AAC/B,eAAe;EACbC,KAAK,CAACC,KAAK,EAAE;IACX,IAAI;MAAEC,QAAQ;MAACC;IAAO,IAAIL,MAAM,CAACG,KAAK,CAAC;IACvCG,OAAO,CAACC,GAAG,CAAC,UAAU,EAACH,QAAQ,EAACC,MAAM;IACtC,MAAMG,KAAI,GAAIP,QAAQ,EAAE;IACxB,IAAIQ,YAAY;IAChB,MAAMC,WAAU,GAAIZ,QAAQ,CAAC,MAAMU,KAAK,CAACG,OAAO,CAACC,cAAc,CAAC;IAChEb,SAAS,CAAC,MAAMc,SAAS,CAAC;IAC1B,MAAMA,SAAQ,GAAI,MAAM;MACtBP,OAAO,CAACC,GAAG,CAAC,IAAI;MAChB,IAAIO,QAAO,GAAIC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;MAC7CP,YAAW,GAAIQ,WAAW,CAAC,MAAM;QAC/BX,OAAO,CAACC,GAAG,CAAC,IAAI;QAChBO,QAAQ,CAACI,SAAQ,IAAK,GAAG;QACzB,IAAIJ,QAAQ,CAACK,WAAU,KAAM,KAAK,EAAE;UAClCL,QAAQ,CAACI,SAAQ,GAAI,EAAE;QACzB;MACF,CAAC,EAAE,GAAG,CAAC;IAET;IACA,MAAME,GAAE,GAAItB,QAAQ,CAAC,MAAM;MAAE,OAAO,IAAI,CAACuB,IAAG;IAAE,CAAC;IAC/C,OAAO;MAACX,WAAW;MAACU,GAAG;MAACP,SAAS;MAACJ;IAAY;EAEhD;AAEF","names":["computed","onMounted","toRefs","useStore","setup","props","question","answer","console","log","store","loadInterval","chatContent","getters","getChatContent","setAnswer","bot_text","document","getElementById","setInterval","innerHTML","textContent","bot","chat"],"sourceRoot":"","sources":["C:\\Users\\DESKTOP\\study\\tech-bot\\client\\src\\components\\ChatContent.vue"],"sourcesContent":["<template>\r\n  <div class=\"grow\">\r\n      <div class=\"flex w-full text-white px-2 py-3 h-max\">\r\n        <div class=\"shrink-0 px-2\">\r\n          <img src=\"../assets/image/profile.png\" class=\"w-12\" id=\"user\"/>\r\n        </div>\r\n        <div class=\"grow-1 break-all bg-gray-700 font-medium p-2\">\r\n          {{chat.question }}\r\n        </div>\r\n      </div>\r\n      <div class=\"flex w-full h-auto text-white px-2 py-3 h-max\">\r\n        <div class=\"grow-1 break-all bg-sky-600 font-medium p-2\" id=\"bot\">\r\n        \r\n        </div>\r\n         <div class=\"shrink-0 px-2\">\r\n          <img src=\"../assets/image/robot.png\" class=\"w-12\" />\r\n        </div>\r\n      </div>\r\n     </div> \r\n</template>\r\n\r\n<script>\r\nimport { computed, onMounted,toRefs } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nexport default {\r\n  setup(props) {\r\n    let { question,answer } = toRefs(props);\r\n    console.log('question',question,answer)\r\n    const store = useStore();\r\n    let loadInterval;\r\n    const chatContent = computed(() => store.getters.getChatContent);\r\n    onMounted(() => setAnswer);\r\n    const setAnswer = () => {\r\n      console.log('타니')\r\n      let bot_text = document.getElementById('bot');\r\n      loadInterval = setInterval(() => {\r\n        console.log('타니')\r\n        bot_text.innerHTML += '.';\r\n        if (bot_text.textContent === '...') {\r\n          bot_text.innerHTML = '';\r\n        }\r\n      }, 300);\r\n      \r\n    }\r\n    const bot = computed(() => { return this.chat })\r\n    return {chatContent,bot,setAnswer,loadInterval}\r\n\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}