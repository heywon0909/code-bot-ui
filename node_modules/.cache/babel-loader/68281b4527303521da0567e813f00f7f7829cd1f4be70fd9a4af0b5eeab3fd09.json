{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createVNode as _createVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"bg-slate-800 w-2/3 rounded-md h-screen flex flex-col\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"text-sky-500 text-xl font-semibold w-full p-3 h-12 border-b-2 flex\\\"><p class=\\\"grow w-5/6 items-center\\\"> CodeBot </p><div class=\\\"float-left grow-0 justify-center items-center flex space-x-3\\\"><div class=\\\"w-2 h-2 bg-sky-500 rounded-full\\\"></div><div class=\\\"w-2 h-2 bg-sky-500 rounded-full\\\"></div><div class=\\\"w-2 h-2 bg-sky-500 rounded-full\\\"></div></div></div>\", 1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_chat_content = _resolveComponent(\"chat-content\");\n  const _component_chat_input = _resolveComponent(\"chat-input\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\"header\"), _hoisted_2, _createCommentVNode(\"chat\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.chatContent, (chat, index) => {\n    return _openBlock(), _createBlock(_component_chat_content, {\n      key: index + 'q',\n      chat: chat\n    }, null, 8 /* PROPS */, [\"chat\"]);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\"input\"), _createVNode(_component_chat_input)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAsD;;;;;uBAAjEC,oBAkBQ,OAlBRC,UAkBQ,GAjBJC,6BAAa,EACbC,UASM,EACND,2BAAW,qBACXF,oBAEWI,6BAFsBC,kBAAW,GAA1BC,IAAI,EAACC,KAAK;yBAC1BC,aAA6BC;WADqBF,KAAK;MACxCD,IAAI,EAAEA;;kCAEvBJ,4BAAY,EACZQ,aAAaC","names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_Fragment","$setup","chat","index","_createBlock","_component_chat_content","_createVNode","_component_chat_input"],"sourceRoot":"","sources":["C:\\Users\\DESKTOP\\study\\tech-bot\\client\\src\\components\\ChatFrame.vue"],"sourcesContent":["<template>\r\n  <div class=\"bg-slate-800 w-2/3 rounded-md h-screen flex flex-col\">\r\n      <!--header-->\r\n      <div class=\"text-sky-500 text-xl font-semibold w-full p-3 h-12 border-b-2 flex\">\r\n        <p class=\"grow w-5/6 items-center\">\r\n          CodeBot\r\n        </p>\r\n        <div class=\"float-left grow-0 justify-center items-center flex space-x-3\">\r\n          <div class=\"w-2 h-2 bg-sky-500 rounded-full\"></div>\r\n          <div class=\"w-2 h-2 bg-sky-500 rounded-full\"></div>\r\n          <div class=\"w-2 h-2 bg-sky-500 rounded-full\"></div>\r\n        </div>\r\n      </div>\r\n      <!--chat-->\r\n      <template v-for=\"(chat,index) in chatContent\" :key=\"index+'q'\" >\r\n        <chat-content :chat=\"chat\" />\r\n      </template>\r\n      <!--input-->\r\n      <chat-input/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport ChatContent from './ChatContent.vue'\r\nimport ChatInput from './ChatInput.vue'\r\nimport { computed } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nexport default {\r\n  components: { ChatContent, ChatInput },\r\n  setup() {\r\n    const store = useStore();\r\n    const chatContent = computed(() => store.getters.getChatContent);\r\n    return {chatContent}\r\n\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}